/*
 * =================================================== - 사용자 정의 컨트롤러 클래스 - 데이터
 * 입력 액션 수행 후 clubinsert.action 다시 요청할 수 있도록 안내 - DAO 객체에 대한 의존성 주입(DI)을 위한 준비 →
 * 인터페이스 형태의 자료형을 속성으로 구성 → setter 메소드 구성
 * ============================================================
 * 
 * package com.becle;
 * 
 * import javax.servlet.http.HttpServletRequest; import
 * javax.servlet.http.HttpServletResponse; import
 * javax.servlet.http.HttpSession;
 * 
 * import org.springframework.web.servlet.ModelAndView; import
 * org.springframework.web.servlet.mvc.Controller;
 * 
 * // ※ Spring 의 『Controller』 인터페이스를 구현하는 방법을 통해 // 사용자 정의 컨트롤러 클래스를 구현 public
 * class ClubInsertController implements Controller {
 * 
 * private IClubDAO dao;
 * 
 * public void setDao(IClubDAO dao) { this.dao = dao; }
 * 
 * @Override public ModelAndView handleRequest(HttpServletRequest request,
 * HttpServletResponse response) throws Exception { // 액션 코드
 * 
 * ModelAndView mav = new ModelAndView();
 * 
 * // 세션 처리과정 추가 (로그인해서 name이나 admin이 없다면 이 페이지 이용 못해야 함) // 즉 로그아웃 상태에서 주소창에
 * action주소 입력해서 접근 못하도록
 * 
 * HttpSession session = request.getSession();
 * 
 * if(session.getAttribute("name")==null) //-- 로그인이 되어있지 않은 상황 {
 * mav.setViewName("redirect:loginform.action"); return mav; }
 * 
 * 
 * // 데이터 수신 → ClubCreate.jsp 로 부터... String title =
 * request.getParameter("name"); String ssn1 = request.getParameter("ssn1");
 * String ssn2 = request.getParameter("ssn2"); String birthday =
 * request.getParameter("birthday"); String lunar =
 * request.getParameter("lunar"); String telephone =
 * request.getParameter("telephone"); String regionId =
 * request.getParameter("regionId"); String departmentId =
 * request.getParameter("departmentId"); String positionId =
 * request.getParameter("positionId"); String basicPay =
 * request.getParameter("basicPay"); String extraPay =
 * request.getParameter("extraPay");
 * 
 * 
 * try { Club club = new Club();
 * 
 * club.setName(name); club.setSsn1(ssn1); club.setSsn2(ssn2);
 * club.setBirthday(birthday); club.setLunar(Integer.parseInt(lunar));
 * club.setTelephone(telephone); club.setRegionId(regionId);
 * club.setDepartmentId(departmentId); club.setPositionId(positionId);
 * club.setBasicPay(Integer.parseInt(basicPay));
 * club.setExtraPay(Integer.parseInt(extraPay));
 * 
 * dao.employeeAdd(club);
 * 
 * mav.setViewName("redirect:어디로.action");
 * 
 * } catch (Exception e) { System.out.println(e.toString()); }
 * 
 * return mav;
 * 
 * }
 * 
 * }
 */